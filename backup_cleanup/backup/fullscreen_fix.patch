--- car_game_advanced_new.py	2023-06-05 08:00:00
+++ car_game_advanced_fixed.py	2023-06-05 08:00:00
@@ -2091,13 +2091,9 @@
     def resize(self, screen_width, screen_height):
         self.screen_width = screen_width
         self.screen_height = screen_height
-        self.font_large = pygame.font.SysFont(
-            "arial", int(screen_height * 0.06), bold=True
-        )
-        self.font_medium = pygame.font.SysFont(
-            "arial", int(screen_height * 0.04), bold=True
-        )
-        self.font_small = pygame.font.SysFont("arial", int(screen_height * 0.03))
+        self.font_large = get_font(int(screen_height * 0.06), bold=True)
+        self.font_medium = get_font(int(screen_height * 0.04), bold=True)
+        self.font_small = get_font(int(screen_height * 0.03))
         self.create_background()
 
     def draw(self):
@@ -2437,7 +2433,7 @@
         if option == "FULLSCREEN":
             if self.current_values[option] == 1:  # ON
                 # Save current window size before going fullscreen
-                self.windowed_size = (self.screen_width, self.screen_height)
+                self.windowed_size = (SCREEN_WIDTH, SCREEN_HEIGHT)
                 
                 # Get the display info for proper fullscreen resolution
                 info = pygame.display.Info()
@@ -2458,13 +2454,9 @@
                 LANE_POSITIONS = [LANE_WIDTH * i + LANE_WIDTH // 2 for i in range(6)]
                 
                 # Update fonts for new screen size
-                self.font_large = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.06), bold=True
-                )
-                self.font_medium = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.04), bold=True
-                )
-                self.font_small = pygame.font.SysFont(
+                self.font_large = get_font(int(self.screen_height * 0.06), bold=True)
+                self.font_medium = get_font(int(self.screen_height * 0.04), bold=True)
+                self.font_small = get_font(int(self.screen_height * 0.03))
                     "arial", int(self.screen_height * 0.03)
                 )
                 
@@ -2495,13 +2487,9 @@
                 LANE_POSITIONS = [LANE_WIDTH * i + LANE_WIDTH // 2 for i in range(6)]
                 
                 # Update fonts for new screen size
-                self.font_large = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.06), bold=True
-                )
-                self.font_medium = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.04), bold=True
-                )
-                self.font_small = pygame.font.SysFont(
+                self.font_large = get_font(int(self.screen_height * 0.06), bold=True)
+                self.font_medium = get_font(int(self.screen_height * 0.04), bold=True)
+                self.font_small = get_font(int(self.screen_height * 0.03))
                     "arial", int(self.screen_height * 0.03)
                 )
                 
@@ -2574,13 +2562,9 @@
     def resize(self, screen_width, screen_height):
         self.screen_width = screen_width
         self.screen_height = screen_height
-        self.font_large = pygame.font.SysFont(
-            "arial", int(screen_height * 0.06), bold=True
-        )
-        self.font_medium = pygame.font.SysFont(
-            "arial", int(screen_height * 0.04), bold=True
-        )
-        self.font_small = pygame.font.SysFont("arial", int(screen_height * 0.03))
+        self.font_large = get_font(int(screen_height * 0.06), bold=True)
+        self.font_medium = get_font(int(screen_height * 0.04), bold=True)
+        self.font_small = get_font(int(screen_height * 0.03))
         self.create_background()
 
     def draw(self):
@@ -2812,7 +2796,7 @@
         if option == "FULLSCREEN":
             if self.current_values[option] == 1:  # ON
                 # Save current window size before going fullscreen
-                self.windowed_size = (self.screen_width, self.screen_height)
+                self.windowed_size = (SCREEN_WIDTH, SCREEN_HEIGHT)
                 
                 # Get the display info for proper fullscreen resolution
                 info = pygame.display.Info()
@@ -2833,13 +2817,9 @@
                 LANE_POSITIONS = [LANE_WIDTH * i + LANE_WIDTH // 2 for i in range(6)]
                 
                 # Update fonts for new screen size
-                self.font_large = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.06), bold=True
-                )
-                self.font_medium = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.04), bold=True
-                )
-                self.font_small = pygame.font.SysFont(
+                self.font_large = get_font(int(self.screen_height * 0.06), bold=True)
+                self.font_medium = get_font(int(self.screen_height * 0.04), bold=True)
+                self.font_small = get_font(int(self.screen_height * 0.03))
                     "arial", int(self.screen_height * 0.03)
                 )
                 
@@ -2870,13 +2850,9 @@
                 LANE_POSITIONS = [LANE_WIDTH * i + LANE_WIDTH // 2 for i in range(6)]
                 
                 # Update fonts for new screen size
-                self.font_large = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.06), bold=True
-                )
-                self.font_medium = pygame.font.SysFont(
-                    "arial", int(self.screen_height * 0.04), bold=True
-                )
-                self.font_small = pygame.font.SysFont(
+                self.font_large = get_font(int(self.screen_height * 0.06), bold=True)
+                self.font_medium = get_font(int(self.screen_height * 0.04), bold=True)
+                self.font_small = get_font(int(self.screen_height * 0.03))
                     "arial", int(self.screen_height * 0.03)
                 )
                 
@@ -4425,6 +4401,12 @@
                     # Update game dimensions
                     screen_width = self.screen.get_width()
                     screen_height = self.screen.get_height()
+                    
+                    # Update global variables to match new screen dimensions
+                    global SCREEN_WIDTH, SCREEN_HEIGHT, SCALE_X, SCALE_Y, LANE_WIDTH, LANE_POSITIONS
+                    SCREEN_WIDTH = screen_width
+                    SCREEN_HEIGHT = screen_height
+                    SCALE_X = SCREEN_WIDTH / BASE_WIDTH
+                    SCALE_Y = SCREEN_HEIGHT / BASE_HEIGHT
                     
                     # Recreate settings menu with new dimensions
                     settings_menu = SettingsMenu(self.screen, screen_width, screen_height)
